// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Navigation_Menu_App;

#nullable disable

namespace Navigation_Menu_App.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230517120312_InitialTwo")]
    partial class InitialTwo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Navigation_Menu_App.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdminFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdminLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdminUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Navigation_Menu_App.Models.Lecturer", b =>
                {
                    b.Property<int>("LecturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LecturerFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LecturerLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LecturerPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LecturerUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LecturerId");

                    b.HasIndex("AdminId");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("Navigation_Menu_App.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<char>("Grade")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ModuleCoordinatorLecturerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ModuleId");

                    b.HasIndex("ModuleCoordinatorLecturerId");

                    b.HasIndex("StudentId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Navigation_Menu_App.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("GPA")
                        .HasColumnType("REAL");

                    b.Property<int>("LecturerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.HasIndex("LecturerId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Navigation_Menu_App.Models.Lecturer", b =>
                {
                    b.HasOne("Navigation_Menu_App.Models.Admin", "Admin")
                        .WithMany("Lecturers")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("Navigation_Menu_App.Models.Module", b =>
                {
                    b.HasOne("Navigation_Menu_App.Models.Lecturer", "ModuleCoordinator")
                        .WithMany()
                        .HasForeignKey("ModuleCoordinatorLecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Navigation_Menu_App.Models.Student", "Student")
                        .WithMany("Modules")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleCoordinator");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Navigation_Menu_App.Models.Student", b =>
                {
                    b.HasOne("Navigation_Menu_App.Models.Lecturer", "Lecturer")
                        .WithMany("Students")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("Navigation_Menu_App.Models.Admin", b =>
                {
                    b.Navigation("Lecturers");
                });

            modelBuilder.Entity("Navigation_Menu_App.Models.Lecturer", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Navigation_Menu_App.Models.Student", b =>
                {
                    b.Navigation("Modules");
                });
#pragma warning restore 612, 618
        }
    }
}
